// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Windetta.Main.Infrastructure.Sagas;

#nullable disable

namespace Windetta.Main.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SagasDbContext))]
    [Migration("20240108125844_AddedTickets")]
    partial class AddedTickets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LSPM.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MatchFlowCorrelationId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TeamIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchFlowCorrelationId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Windetta.Main.Infrastructure.Sagas.MatchFlow", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)");

                    b.Property<ulong>("BetAmount")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("BetCurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CanceledReason")
                        .HasColumnType("VARCHAR(32)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<sbyte>("CurrentState")
                        .HasColumnType("TINYINT");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("VARCHAR(42)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Tickets")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CorrelationId");

                    b.HasIndex("CorrelationId");

                    b.ToTable("MatchFlow");
                });

            modelBuilder.Entity("LSPM.Models.Player", b =>
                {
                    b.HasOne("Windetta.Main.Infrastructure.Sagas.MatchFlow", null)
                        .WithMany("Players")
                        .HasForeignKey("MatchFlowCorrelationId");
                });

            modelBuilder.Entity("Windetta.Main.Infrastructure.Sagas.MatchFlow", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
